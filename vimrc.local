set encoding=utf-8
set relativenumber
set cursorline
set fo-=t
<<<<<<< HEAD
set noesckeys
set ttimeout
set ttimeoutlen=1
set noshowmode

set background=dark
colorscheme monokai
let g:molokai_origin = 1
=======
set noshowmode

>>>>>>> Changed theme to solarized-dark
let g:rehash256 = 1
let g:airline_powerline_fonts = 1
let g:tmuxline_powerline_separators = 1
let g:tmuxline_theme = 'airline'
let g:airline#extensions#tmuxline#enabled = 0

syntax enable
set background=dark
colorscheme solarized

if has("gui_running")
  autocmd VimResized * wincmd =
endif

autocmd BufNewFile,BufRead *.json set ft=javascript
autocmd BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn} set ft=markdown
autocmd BufRead,BufNewFile *.slim set ft=slim
autocmd BufRead,BufNewFile {Gemfile,Rakefile,config.ru} set ft=ruby
autocmd FileType ruby,eruby,yaml setlocal iskeyword+=?
autocmd FileType ruby,eruby,yaml setlocal path+=lib
autocmd FileType ruby,eruby,yaml setlocal colorcolumn=80

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let syntastic_mode_map = { 'passive_filetypes': ['html'] }

if version >= 700
  au InsertEnter * hi StatusLine ctermfg=235 ctermbg=2
  au InsertLeave * hi StatusLine ctermbg=240 ctermfg=12
endif

let g:rspec_command = "Dispatch rspec {spec}"
let mapleader = "\<Space>"
nnoremap <Leader>w :w<CR>
nmap <Leader><Leader> v

nmap <Leader>d :Dispatch
nmap <Leader>c :Start rails console<CR>

if has("autocmd")
  filetype indent plugin on
endif

let NERDTreeSortOrder = ['\/$', '\.js*', '\.cpp$', '\.h$', '*']
let NERDTreeMinimalUI=1
let NERDTreeDirArrows=1
autocmd VimEnter * if !argc() | NERDTree | endif
autocmd VimEnter * wincmd p
nmap <silent> <Leader>p :NERDTreeToggle<CR>
map <leader>r :NERDTreeFind<CR>
map <leader>o :NERDTree<CR>
autocmd FileType nerdtree noremap <buffer> <c-left> <nop>
autocmd FileType nerdtree noremap <buffer> <c-h> <nop>
autocmd FileType nerdtree noremap <buffer> <c-right> <nop>
autocmd FileType nerdtree noremap <buffer> <c-l> <nop>

let g:ctrlp_map = '<leader>f'
let g:ctrlp_max_height = 20
let g:ctrlp_working_path_mode = 0
let g:ctrlp_match_window_reversed = 0
" Stolen from Brandon Hilkert's Dotfiles
if executable('ag')
  set grepprg=ag\ --nogroup\ --nocolor
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
  let g:ctrlp_use_caching = 0
endif
nnoremap <leader>. :CtrlPTag<cr>

set wildignore+=tmp/**,*.scssc,*.sassc

map <leader>a :Ag!<space>

" Snippets
iunmap <S-Tab>
let g:snippetsEmu_key = "<S-Tab>"

" Tab leaders
noremap <leader>1 1gt
noremap <leader>2 2gt
noremap <leader>3 3gt
noremap <leader>4 4gt
noremap <leader>5 5gt
noremap <leader>6 6gt
noremap <leader>7 7gt
noremap <leader>8 8gt
noremap <leader>9 9gt
noremap <leader>0 :tablast<cr>

function! RenameFile()
  let old_name = expand('%')
  let new_name = input('New file name: ', expand('%'))
  if new_name != '' && new_name != old_name
    exec ':saveas ' . new_name
    exec ':silent !rm ' . old_name
    redraw!
  endif
endfunction
map <leader>n :call RenameFile()<cr>

map K <Nop>
