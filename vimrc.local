set encoding=utf-8
set relativenumber
set cursorline
set mouse=a
set ttyfast
set ttymouse=xterm2
set noshowmode

" Colours
colorscheme monokai
let g:molokai_origin = 1
let g:rehash256 = 1

" Airline (powerline)
let g:airline_powerline_fonts = 1
let g:tmuxline_powerline_separators = 1
let g:airline#extensions#tmuxline#enabled = 0

autocmd VimResized * :wincmd =
autocmd FocusLost * :wa        " autosave when file focus is lost
autocmd FileType gitcommit,markdown setlocal spell
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete
autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete
autocmd FileType ruby,perl,tex set shiftwidth=2
autocmd FileType c,cpp,java,javascript,python,xml,xhtml,html set shiftwidth=2
au BufRead,BufNewFile *.json set filetype=json

" Linters / JSX
" let g:jsx_ext_required = 0
" let g:syntastic_javascript_checkers = ['eslint']

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

if version >= 700
  au InsertEnter * hi StatusLine ctermfg=235 ctermbg=2
  au InsertLeave * hi StatusLine ctermbg=240 ctermfg=12
endif

let g:rspec_command = "Dispatch rspec {spec}"
let mapleader = "\<Space>"
nnoremap <Leader>w :w<CR>
nmap <Leader><Leader> v

nmap <Leader>d :Dispatch
nmap <Leader>z :Start zsh<CR>
nmap <Leader>c :Start rails console<CR>

if has("autocmd")
  filetype indent plugin on
endif

" NERDTree
let NERDTreeSortOrder = ['\/$', '\.js*', '\.cpp$', '\.h$', '*']
let NERDTreeMinimalUI=1
let NERDTreeDirArrows=1
autocmd VimEnter * if !argc() | NERDTree | endif
autocmd VimEnter * wincmd p
nmap <silent> <Leader>p :NERDTreeToggle<CR>
map <leader>r :NERDTreeFind<CR>
map <leader>o :NERDTree<CR>

" CtrlP
let g:ctrlp_map = '<leader>f'
let g:ctrlp_max_height = 30
let g:ctrlp_working_path_mode = 0
let g:ctrlp_match_window_reversed = 0
" Stolen from Brandon Hilkert's Dotfiles
if executable('ag')
  " Use ag over grep
  " set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" ignore Rubinius, Sass cache files
set wildignore+=tmp/**,*.scssc,*.sassc

map <leader>a :Ag!<space>

" Snippets
iunmap <S-Tab>
let g:snippetsEmu_key = "<S-Tab>"

" Tab leaders
noremap <leader>1 1gt
noremap <leader>2 2gt
noremap <leader>3 3gt
noremap <leader>4 4gt
noremap <leader>5 5gt
noremap <leader>6 6gt
noremap <leader>7 7gt
noremap <leader>8 8gt
noremap <leader>9 9gt
noremap <leader>0 :tablast<cr>

function! RenameFile()
  let old_name = expand('%')
  let new_name = input('New file name: ', expand('%'))
  if new_name != '' && new_name != old_name
    exec ':saveas ' . new_name
    exec ':silent !rm ' . old_name
    redraw!
  endif
endfunction
map <leader>n :call RenameFile()<cr>

